scalar IsoDate
scalar IsoDateTime
scalar IsoTime

type Query {
  getLoans: [Loan!]!
  getLoan(loanId: ID!, effectiveDateTime: IsoDateTime!): Loan
}

type Loan {
  id: String!
  name: String!
  startAt: IsoDateTime!
  paymentsPerYear: Int!
  paymentAmount: Float!
  principal: Float!
  extraPayment: Float!
  completedPayments: [Payment!]!
  remainingPayments: [Payment!]!
}

type Payment {
  forLoan: Loan!
  principalPayment: Float!
  interestPayment: Float!
  totalPayment: Float!
  remainingPrincipal: Float!
  date: IsoDate!
}

type Mutation {
  makePayment(
    loanId: ID!
    paymentAmount: Float!
    effectiveDateTime: IsoDateTime!
  ): Loan
}
